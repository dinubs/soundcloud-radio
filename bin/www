#!/usr/bin/env node
var debug = require('debug')('soundcloud-radio');
var app = require('../app');

app.set('port', process.env.PORT || 3000);

var server = app.listen(app.get('port'), function() {
	console.log('Express server listening on port ' + server.address().port);
});

var io = require('socket.io')(server);

server.listen(80);

var tracks = [];
var currentStreamUrl = '';
var currentTime = 0;
var currentTrackDuration = 0;
var interval = 50;
var started = false;
var currentIndex = 0;
var currentTrack;

io.on('connection', function (socket) {
	socket.on('comment', function(data) {
		console.log(data);
		io.emit('comment', data);
	});
	if (started) {
		socket.emit('set audio player', {soundcloud: currentTrack, stream: currentStreamUrl, currentTime: currentTime})
	}
	socket.on('add track', function(url) {
		tracks.push(url);
		console.log(tracks.length);
		if (!started) {
			setInterval(function() {
				currentTime += interval;
				// console.log(currentTime / currentTrackDuration * 100);
				if (currentTime > currentTrackDuration && started) {
					currentTime = 0;
					currentIndex++;
					console.log(currentIndex);
					if (tracks.length == currentIndex && started) {
						io.emit('comment', 'No tracks left in the queue :(');
						started = false;
					} else{
						currentTrack = tracks[currentIndex];
						currentStreamUrl = currentTrack.stream_url + '?client_id=6e73cbbe5e7edeba75334acbeb81492f';
						currentTrackDuration = currentTrack.duration;
						io.emit('set audio player', {soundcloud: currentTrack, stream: currentStreamUrl, currentTime: 0});
						io.emit('comment', 'Now Playing: ' + currentTrack.title + ' by ' + currentTrack.user.username);
					}
				}
			}, interval);
			currentTrack = tracks[0];
			currentTrackDuration = url.duration
			currentStreamUrl = url.stream_url + '?client_id=6e73cbbe5e7edeba75334acbeb81492f';
			io.emit('set audio player', {soundcloud: currentTrack, stream: currentStreamUrl, currentTime: 0});
			io.emit('comment', 'Now Playing: ' + currentTrack.title);
			started = true;
		}
	});
});